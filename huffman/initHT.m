function [  HT_Y_DC, HT_Y_DC_NVALUES, HT_Y_DC_VALUES, ... 
            HT_Y_AC, HT_Y_AC_NVALUES, HT_Y_AC_VALUES, ...
            HT_CBCR_DC, HT_CBCR_DC_NVALUES, HT_CBCR_DC_VALUES, ... 
            HT_CBCR_AC, HT_CBCR_AC_NVALUES, HT_CBCR_AC_VALUES ] = initHT()
    
    HT_Y_DC_NVALUES = [0 0 1 5 1 1 1 1 1 1 0 0 0 0 0 0 0];
    HT_Y_DC_VALUES = [0 1 2 3 4 5 6 7 8 9 10 11];
    HT_Y_DC = getHT(HT_Y_DC_NVALUES, HT_Y_DC_VALUES);
    
    HT_Y_AC_NVALUES = [0 0 2 1 3 3 2 4 3 5 5 4 4 0 0 1 hex2dec('7d')];
    HT_Y_AC_VALUES = [
            hex2dec('01') hex2dec('02') hex2dec('03') hex2dec('00') hex2dec('04') hex2dec('11') hex2dec('05') hex2dec('12') ...
            hex2dec('21') hex2dec('31') hex2dec('41') hex2dec('06') hex2dec('13') hex2dec('51') hex2dec('61') hex2dec('07') ...
            hex2dec('22') hex2dec('71') hex2dec('14') hex2dec('32') hex2dec('81') hex2dec('91') hex2dec('a1') hex2dec('08') ...
            hex2dec('23') hex2dec('42') hex2dec('b1') hex2dec('c1') hex2dec('15') hex2dec('52') hex2dec('d1') hex2dec('f0') ...
            hex2dec('24') hex2dec('33') hex2dec('62') hex2dec('72') hex2dec('82') hex2dec('09') hex2dec('0a') hex2dec('16') ...
            hex2dec('17') hex2dec('18') hex2dec('19') hex2dec('1a') hex2dec('25') hex2dec('26') hex2dec('27') hex2dec('28') ...
            hex2dec('29') hex2dec('2a') hex2dec('34') hex2dec('35') hex2dec('36') hex2dec('37') hex2dec('38') hex2dec('39') ...
            hex2dec('3a') hex2dec('43') hex2dec('44') hex2dec('45') hex2dec('46') hex2dec('47') hex2dec('48') hex2dec('49') ...
            hex2dec('4a') hex2dec('53') hex2dec('54') hex2dec('55') hex2dec('56') hex2dec('57') hex2dec('58') hex2dec('59') ...
            hex2dec('5a') hex2dec('63') hex2dec('64') hex2dec('65') hex2dec('66') hex2dec('67') hex2dec('68') hex2dec('69') ...
            hex2dec('6a') hex2dec('73') hex2dec('74') hex2dec('75') hex2dec('76') hex2dec('77') hex2dec('78') hex2dec('79') ...
            hex2dec('7a') hex2dec('83') hex2dec('84') hex2dec('85') hex2dec('86') hex2dec('87') hex2dec('88') hex2dec('89') ...
            hex2dec('8a') hex2dec('92') hex2dec('93') hex2dec('94') hex2dec('95') hex2dec('96') hex2dec('97') hex2dec('98') ...
            hex2dec('99') hex2dec('9a') hex2dec('a2') hex2dec('a3') hex2dec('a4') hex2dec('a5') hex2dec('a6') hex2dec('a7') ...
            hex2dec('a8') hex2dec('a9') hex2dec('aa') hex2dec('b2') hex2dec('b3') hex2dec('b4') hex2dec('b5') hex2dec('b6') ...
            hex2dec('b7') hex2dec('b8') hex2dec('b9') hex2dec('ba') hex2dec('c2') hex2dec('c3') hex2dec('c4') hex2dec('c5') ...
            hex2dec('c6') hex2dec('c7') hex2dec('c8') hex2dec('c9') hex2dec('ca') hex2dec('d2') hex2dec('d3') hex2dec('d4') ...
            hex2dec('d5') hex2dec('d6') hex2dec('d7') hex2dec('d8') hex2dec('d9') hex2dec('da') hex2dec('e1') hex2dec('e2') ...
            hex2dec('e3') hex2dec('e4') hex2dec('e5') hex2dec('e6') hex2dec('e7') hex2dec('e8') hex2dec('e9') hex2dec('ea') ...
            hex2dec('f1') hex2dec('f2') hex2dec('f3') hex2dec('f4') hex2dec('f5') hex2dec('f6') hex2dec('f7') hex2dec('f8') ...
            hex2dec('f9') hex2dec('fa')
        ];
    HT_Y_AC = getHT(HT_Y_AC_NVALUES, HT_Y_AC_VALUES);
    %HT_Y_AC
    
    HT_CBCR_DC_NVALUES = [0 0 3 1 1 1 1 1 1 1 1 1 0 0 0 0 0];
    HT_CBCR_DC_VALUES = [0 1 2 3 4 5 6 7 8 9 10 11];
    HT_CBCR_DC = getHT(HT_CBCR_DC_NVALUES, HT_CBCR_DC_VALUES);       
    HT_CBCR_DC
    
    HT_CBCR_AC_NVALUES = [0 0 2 1 2 4 4 3 4 7 5 4 4 0 1 2 hex2dec('77')];
    HT_CBCR_AC_VALUES = [
            hex2dec('00') hex2dec('01') hex2dec('02') hex2dec('03') hex2dec('11') hex2dec('04') hex2dec('05') hex2dec('21') ...
            hex2dec('31') hex2dec('06') hex2dec('12') hex2dec('41') hex2dec('51') hex2dec('07') hex2dec('61') hex2dec('71') ...
            hex2dec('13') hex2dec('22') hex2dec('32') hex2dec('81') hex2dec('08') hex2dec('14') hex2dec('42') hex2dec('91') ...
            hex2dec('a1') hex2dec('b1') hex2dec('c1') hex2dec('09') hex2dec('23') hex2dec('33') hex2dec('52') hex2dec('f0') ...
            hex2dec('15') hex2dec('62') hex2dec('72') hex2dec('d1') hex2dec('0a') hex2dec('16') hex2dec('24') hex2dec('34') ...
            hex2dec('e1') hex2dec('25') hex2dec('f1') hex2dec('17') hex2dec('18') hex2dec('19') hex2dec('1a') hex2dec('26') ...
            hex2dec('27') hex2dec('28') hex2dec('29') hex2dec('2a') hex2dec('35') hex2dec('36') hex2dec('37') hex2dec('38') ...
            hex2dec('39') hex2dec('3a') hex2dec('43') hex2dec('44') hex2dec('45') hex2dec('46') hex2dec('47') hex2dec('48') ...
            hex2dec('49') hex2dec('4a') hex2dec('53') hex2dec('54') hex2dec('55') hex2dec('56') hex2dec('57') hex2dec('58') ...
            hex2dec('59') hex2dec('5a') hex2dec('63') hex2dec('64') hex2dec('65') hex2dec('66') hex2dec('67') hex2dec('68') ...
            hex2dec('69') hex2dec('6a') hex2dec('73') hex2dec('74') hex2dec('75') hex2dec('76') hex2dec('77') hex2dec('78') ...
            hex2dec('79') hex2dec('7a') hex2dec('82') hex2dec('83') hex2dec('84') hex2dec('85') hex2dec('86') hex2dec('87') ...
            hex2dec('88') hex2dec('89') hex2dec('8a') hex2dec('92') hex2dec('93') hex2dec('94') hex2dec('95') hex2dec('96') ...
            hex2dec('97') hex2dec('98') hex2dec('99') hex2dec('9a') hex2dec('a2') hex2dec('a3') hex2dec('a4') hex2dec('a5') ...
            hex2dec('a6') hex2dec('a7') hex2dec('a8') hex2dec('a9') hex2dec('aa') hex2dec('b2') hex2dec('b3') hex2dec('b4') ...
            hex2dec('b5') hex2dec('b6') hex2dec('b7') hex2dec('b8') hex2dec('b9') hex2dec('ba') hex2dec('c2') hex2dec('c3') ...
            hex2dec('c4') hex2dec('c5') hex2dec('c6') hex2dec('c7') hex2dec('c8') hex2dec('c9') hex2dec('ca') hex2dec('d2') ...
            hex2dec('d3') hex2dec('d4') hex2dec('d5') hex2dec('d6') hex2dec('d7') hex2dec('d8') hex2dec('d9') hex2dec('da') ...
            hex2dec('e2') hex2dec('e3') hex2dec('e4') hex2dec('e5') hex2dec('e6') hex2dec('e7') hex2dec('e8') hex2dec('e9') ...
            hex2dec('ea') hex2dec('f2') hex2dec('f3') hex2dec('f4') hex2dec('f5') hex2dec('f6') hex2dec('f7') hex2dec('f8') ...
            hex2dec('f9') hex2dec('fa')
        ];
        HT_CBCR_AC = getHT(HT_CBCR_AC_NVALUES, HT_CBCR_AC_VALUES);

end

% nvalues
% (1) Number of values for each bit length (16 bytes)
% The position of each byte represents the bit length of the Huffman table and 
% each byte value is the number of values for that bit length. 
% For example, if the data is 0x000105 then there will be 
% 0 values with a bit length of 1, 
% 1 value with a bit length of 2 and 
% 5 values with a bit length of 3.  
%
% values
% (2) Actual values (*Sum of values above* bytes)
% Length is equal to the sum of the values in (1). 
% So for the example above 0x000105 would translate to 6 bytes.
function HT = getHT(nvalues, values)
    
    code_word = 0;
    pos_in_values = 0;
    HT = [];
    [rows, cols] = size(nvalues);
    for code_length=1 : cols-1
        for j=1 : nvalues(code_length+1)
            HT(values(pos_in_values+1)+1, 1) = code_word;
            HT(values(pos_in_values+1)+1, 2) = code_length;
            pos_in_values = pos_in_values + 1;
            code_word = code_word + 1;
        end
        code_word = code_word*2;    
    end 
end